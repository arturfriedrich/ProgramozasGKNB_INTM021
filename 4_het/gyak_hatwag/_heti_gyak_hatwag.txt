Szinusz görbe ascii art stílusban - ( szinusz_fugg.cpp, szinusz_fugg.mp4; szinusz_viz.cpp, szinusz_viz.mp4)
- Vizualizálja karakteres felületen a szinusz függvényt! Ha úgy könnyebb, az x tengely állhat függőlegesen is, azaz 90 fokkal el lehet forgatni az ábrát.

Másodfokú egyenlet - (masodfoku.cpp)
- Olvassunk be `a` `b` és `c` együtthatókat szabvány bemenetről
- Amennyiben az értékek alapján alkotott másodfokú egyenletnek (𝑎𝑥2+𝑏𝑥+𝑐=0) van valós gyöke írja ki az eredményt, különben pedig `Az egyenletenek nincs valos gyoke` szöveget.

Megjegyzés: Az egyenletnek akkor van valós gyöke, ha a négyzetgyökjel alatt álló diszkrimináns nemnegatív.

Jelezzük ki a megoldást - (masodfoku.cpp)
- Segítség: a 4𝑥2+8𝑥−5=0 egyenlet megoldásai: 𝑥1=0.5,𝑥2=−2.5
- Plusz feladat: amennyiben a diszkrimináns 0 és csak 1 megoldás van, akkor ezt külön jelezze! //nem megvalositott

Rendszám ellenőrző - (rendszam.cpp:incomplete, rendszam.mp4)
- Írjon C++ programot, amely egy string validációját végzi el. A formátum egyezzen meg a leggyakoribb magyar rendszámtábla formátumával. Eszerint 7 karakter hosszúságú legyen, ennek elején három (nagy vagy kis) betű után egy kötőjel és végül három szám következzen!
- A program `k` betűre lépjen ki!
- Plusz feladat: Fejlessze tovább az előző feladatot, úgy, hogy a 3 betű, kötőjel, 3 szám mellett a 3 betű, három szám és a 3 betű, space, 3 szám formátumot is fogadja el. Pl. `SZE-001`, `SZE 001`, `SZE001` 