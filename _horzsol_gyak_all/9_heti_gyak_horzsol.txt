Tartalomjegyzék:
- File-kezelés
- Fejléc védelem


// 9/1 File-kezelés

/*** Data.txt ***/
Clarke, Arthur C.
Tolkien, John R. R.
Asimov, Isaac
King, Stephen


/*** Decl.hpp ***/
#pragma once
#include<iostream>
#include<fstream>  // ifstream és ofstream osztályokhoz

#define SR 4
#define OP 20

using namespace std;

void monogram(const string*, string*);
bool kiir(const string*, bool, ofstream&);
string* feltolt(string);
void cm_nv(string*);

/*** Funs.cpp ***/
#include "Decl.hpp"

string* feltolt(string fbe)
{
  ifstream fg(fbe);
  if(fg.is_open()) {
   string* szk=new string[SR];
   for(int i=0; i<SR; i++) { getline(fg,szk[i]); }
   fg.close();
   return szk; 
  }
  else { cerr << "\n Sikertelen file-nyitás!\n" << endl; return 0; }
}

void cm_nv(string* szk)
{
 for(int i=0; i<SR; i++) {
  cout << "\n A(z) " << i+1 << ". elem címe: "
       << &szk[i] << endl;
  cout << " A(z) " << i+1 << ". elem tartalma: "
       << szk[i] << endl; }
  cout << "\n A mátrix címe: " << szk
       << "\n A mátrix 1. eleme: " << (*szk) << endl;
}

void monogram(const string* szk, string* m)
{
  int j; 
  char t;
  string def="12345"; 
  for(int i=0; i<SR; i++) {
   m[i]=def;
   m[i][0]=szk[i][0]; m[i][1]='.'; m[i][2]=' ';
   t='!';
   for(j=0; t!=' '; j++) { t=szk[i][j]; }
   m[i][3]=szk[i][j]; m[i][4]='.';
  } // külső for
}

bool kiir(const string* ki_pt, bool mit, ofstream& fw)
{
 bool ki=0;
 string io; 
 if(mit) io=" alap ";
 else io=" monogram ";
 if(fw.is_open()) ki=1;
 for(int i=0; i<SR; i++) {
  cout << "\n A(z)" << io << "mátrix " << i+1 << ". eleme: "
       << ki_pt[i]; 
   if(ki) fw.write((ki_pt[i]+"\n").c_str(), ki_pt[i].length()+1);
  }
 return ki;
}

/*** main.cpp ***/
#include "Decl.hpp"

int main()
{
  bool ki;
  string* szerzok;
  string f_be="Datas.txt", f_ki="Mgms.txt";
  szerzok=feltolt(f_be);
  if(szerzok) {
   cm_nv(szerzok); 
   ofstream fw(f_ki);
   kiir(szerzok,1,fw); cout << endl;
   string* mgm=new string[SR];
   monogram(szerzok,mgm);
   ki=kiir(mgm,0,fw); cout << endl;
   if(ki) fw.close();
   delete [] mgm; mgm=0;
   delete [] szerzok; szerzok=0;
  }
  return 0;
}
/***************************************************************************************/
// 9/2 Fejléc védelem
/*** Decl.hpp ***/
#ifndef DECL
#define DECL

#include<iostream>
#include<fstream>  // ifstream és ofstream osztályokhoz

#define SR 4
#define OP 20

using namespace std;

void monogram(const string*, string*);
bool kiir(const string*, bool, ofstream&);
string* feltolt(string);
void cm_nv(string*);

#endif